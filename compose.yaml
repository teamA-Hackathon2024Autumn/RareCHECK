services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      app_network:
        ipv4_address: 172.19.0.10  # 静的IPアドレスを指定
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    networks:
      app_network:
        ipv4_address: 172.19.0.11  # フロントエンドとは異なるIP
      db_network:
        ipv4_address: 172.20.0.2  # バックエンドサービス用
    environment:
      - DATABASE_URI=mysql://user:password@db/rarecheck
    depends_on:
      - db

  db:
    build:
      context: ./db  # dbディレクトリをコンテキストとして使用
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: rarecheck
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      db_network:
        ipv4_address: 172.20.0.3  # 専用ネットワークでbackendと通信
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

  db_network:  # 新しい専用ネットワーク
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
